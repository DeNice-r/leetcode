def solve(board):
    linesc, linesr, boxes = {}, {}, {}
    length = len(board)

    for y in range(length):
        for x in range(length):
            if board[x][y] == '.':
                continue
            bi = x // 3 * length + y // 3
            linesc.setdefault(x, set())
            linesr.setdefault(y, set())
            boxes.setdefault(bi, set())
            e = board[x][y]
            if e in linesc[x] or e in linesr[y] or e in boxes[bi]:
                return False

            linesc[x].add(board[x][y])
            linesr[y].add(board[x][y])
            boxes[bi].add(board[x][y])

    return True


# Someone else's solution (very clever)
def solve(board):
    res = []
    for i, row in enumerate(board):
        for j, val in enumerate(row):
            if val != '.':
                res += [(i, val), (val, j), (i // 3, j // 3, val)]
    return len(res) == len(set(res))


assert solve([["5", "3", ".", ".", "7", ".", ".", ".", "."]
                 , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                 , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                 , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                 , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                 , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                 , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                 , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                 , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]) is True

assert solve([["8", "3", ".", ".", "7", ".", ".", ".", "."]
                 , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                 , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                 , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                 , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                 , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                 , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                 , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                 , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]) is False

assert solve([[".", ".", "4", ".", ".", ".", "6", "3", "."],
              [".", ".", ".", ".", ".", ".", ".", ".", "."],
              ["5", ".", ".", ".", ".", ".", ".", "9", "."],
              [".", ".", ".", "5", "6", ".", ".", ".", "."],
              ["4", ".", "3", ".", ".", ".", ".", ".", "1"],
              [".", ".", ".", "7", ".", ".", ".", ".", "."],
              [".", ".", ".", "5", ".", ".", ".", ".", "."],
              [".", ".", ".", ".", ".", ".", ".", ".", "."],
              [".", ".", ".", ".", ".", ".", ".", ".", "."]]) is False
